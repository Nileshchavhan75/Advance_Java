package com.controller;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class JDBCExample {
    public static void main(String[] args) {
        // JDBC URL, username, and password of MySQL server
        String url = "jdbc:mysql://localhost:3306/college";  // URL to your college database
        String username = "root";  // MySQL username
        String password = "Nilesh@7";  // MySQL password

        // Declare connection and statement
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            // Step 1: Register MySQL JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");  // MySQL driver class

            // Step 2: Open a connection to the database
            connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connection established successfully!");

            // Step 3: Create a statement object to execute SQL queries
            statement = connection.createStatement();

            // Step 4: Write SQL query to fetch data from the 'student' table
            String sql = "SELECT roll_num, name FROM student";

            // Step 5: Execute the query and get the results
            resultSet = statement.executeQuery(sql);

            // Step 6: Process the results
            while (resultSet.next()) {
                int rollNum = resultSet.getInt("roll_num");
                String name = resultSet.getString("name");
                System.out.println("Roll Number: " + rollNum + ", Name: " + name);
            }

        } catch (SQLException e) {
            System.out.println("SQL Error: " + e.getMessage());
        } catch (ClassNotFoundException e) {
            System.out.println("JDBC Driver not found: " + e.getMessage());
        } finally {
            // Step 7: Clean up the resources
            try {
                if (resultSet != null) resultSet.close();
                if (statement != null) statement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                System.out.println("Error closing resources: " + e.getMessage());
            }
        }
    }
}
